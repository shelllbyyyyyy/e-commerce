services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    networks:
      - default
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  postgres-primary:
    image: postgres:13
    container_name: postgres-primary
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: e-commerce
    volumes:
      - data_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - default

  auth:
    build:
      context: ./server
      dockerfile: ./apps/auth/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev auth"
    env_file:
      - ./server/apps/auth/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  user:
    build:
      context: ./server
      dockerfile: ./apps/user/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev user"
    env_file:
      - ./server/apps/user/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  product:
    build:
      context: ./server
      dockerfile: ./apps/product/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev product"
    env_file:
      - ./server/apps/product/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  inventory:
    build:
      context: ./server
      dockerfile: ./apps/inventory/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev inventory"
    env_file:
      - ./server/apps/inventory/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  cart:
    build:
      context: ./server
      dockerfile: ./apps/cart/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev cart"
    env_file:
      - ./server/apps/cart/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  order:
    build:
      context: ./server
      dockerfile: ./apps/order/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev order"
    env_file:
      - ./server/apps/order/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  billing:
    build:
      context: ./server
      dockerfile: ./apps/billing/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev billing"
    env_file:
      - ./server/apps/billing/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  gateways:
    build:
      context: ./server
      dockerfile: ./apps/root/dev.Dockerfile
    command: sh -c "npx prisma migrate deploy && npm run start:dev root"
    ports:
      - "5000:5000"
    env_file:
      - ./server/apps/root/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
      auth:
        condition: service_started
      user:
        condition: service_started
      product:
        condition: service_started
      inventory:
        condition: service_started
      cart:
        condition: service_started
      order:
        condition: service_started
      billing:
        condition: service_started

    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

  nextjs:
    build:
      context: ./web
      dockerfile: ./dev.Dockerfile
    env_file:
      - ./web/.env.development
    depends_on:
      gateways:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      postgres-primary:
        condition: service_healthy
    ports:
      - "8001:8001"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - default

volumes:
  data_postgres:
  rabbitmq_data:

networks:
  default:
